name: resuable-fit

on:
  workflow_call:
    inputs:
      runs_on:
        required: false
        type: string
        default: "ubuntu-latest"
      platform_setup:
        required: true
        type: string
        default: "non-embedded"
      start_cmd:
        required: false
        type: string
        default: "fprime-gds"
      gds_args:
        required: false
        type: string
      dict_path:
        required: false
        type: string
      test_path:
        required: false
        type: string

jobs:
# Following 3 jobs are on a switch, only one will run based on 2 conditionals: non_embedded and fsw_first.
# job 1 start fsw gds together: if non_embedded is true.
# job 2 start fsw first and then gds: if not non_embedded and fsw_first is true
# job 3 start gds and then fsw: if not non_embedded and not fsw_first
# after one of these 3 jobs run, fit job step will run.
#
#           /    non-embedded   \
# build --->|    fsw-gds        |---> fit
#           \    gds-fsw        /

  non-embedded:
    if: ${{ inputs.platform_setup == 'non-embedded' }}
    runs-on: ${{ inputs.runs_on }}
    steps:
      - name: "Start FSW and GDS"
        run: ${{ inputs.start_cmd }}
      - name: "Run Integration tests"
        run: |
            sleep 12
            pytest ${{ inputs.test_path }} --dictionary ${{ inputs.dict_path }} -rP

  fsw-gds:
    if: ${{ inputs.platform_setup == 'fsw-gds' }}
    runs-on: ${{ inputs.runs_on }}
    steps:
      - name: "Start FSW"
        run: ${{ inputs.start_cmd }}
      - name: "Start GDS"
        run: |
            fprime-gds -n --dictionary ${{ inputs.dict_path }} --gui none ${{ inputs.gds_args }} &
            sleep 12
      - name: "Run Integration tests"
        run: pytest ${{ inputs.test_path }} -rP --dictionary ${{ inputs.dict_path }} --logs ./

  gds-fsw:
    if: ${{ inputs.platform_setup == 'gds-fsw' }}
    runs-on: ${{ inputs.runs_on }}
    steps:
      - name: "Start GDS"
        run: fprime-gds -n --dictionary ${{ inputs.dict_path }} --gui none ${{ inputs.gds_args }} &
      - name: "Start FSW"
        run: |
            ${{ inputs.start_cmd }}
            sleep 12
      - name: "Run Integration tests"
        run: pytest ${{ inputs.test_path }} --dictionary ${{ inputs.dict_path }} -rP

#  fit:
#    runs-on: ${{ inputs.runs_on }}
#    if: ${{ always() }}
#    needs: [non-embedded, fsw-gds, gds-fsw]
#    steps:
#      - name: "Run Integration tests"
#        run: |
#            pytest ${{ inputs.test_path }} --dictionary ${{ inputs.dict_path }} -rP
